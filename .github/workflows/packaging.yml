#
# 打包Amlogic/Rockchip固件,请勿修改文件名称（packaging.yml）
#

name: 打包armsr_rootfs_tar_gz
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      source_branch:
        description: '选择源码(您使用本仓库编译成功过的)'
        required: true
        default: 'Lede'
        type: choice
        options:
          - 'Lede'
          - 'Immortalwrt'
          - 'Lienol'
          - 'Official'
          - 'Xwrt'
          - 'Mt798x'
      amlogic_model:
        description: '选择机型'
        required: true
        default: "s905d"
        type: choice
        options:
          - all
          - s905w_s905x_s905x-b860h_s905x-t95_s905x2_s905x3_s905x3-x88-pro-x3_s912_s912-m8s-pro_s912-phicomm-t1_s912-t95z-plus
          - s912-x92_s922x_s922x-ct2000_s922x-reva_seewo-sv21_smart-am40_smart-am60_station-m1_sw799_swan1-w28
          - tanix-tx6_tb-ls3399_tn3399_tpm312_tqc-a01_tvi3315a_vplus_wxy-oec_xiaobao_yskj_zcube1-max_zk-r39a_zysj
          - a311d
          - beikeyun
          - chainedbox
          - crrc
          - dg3399
          - dg-tn3568
          - dlfr100
          - e20c
          - e25
          - eaidk-610
          - emb3531
          - fine3399
          - firefly-rk3399
          - fmx1-pro
          - jp-tvbox
          - h28k
          - h66k
          - h68k
          - h69k
          - h88k
          - h88k-v3
          - h96-max-m2
          - hs530r
          - hugsun-x99
          - ipc-r
          - king3399
          - kylin3399
          - lckfb-tspi
          - leez
          - lx-r3s
          - mrkaio-m68s
          - nanopc-t6
          - nanopi-r5c
          - nanopi-r5s
          - orangepi-5-plus
          - panther-x2
          - r66s
          - r68s
          - renegade-rk3328
          - rk3318-box
          - rock5b
          - rock5c
          - ruisen-box
          - s905
          - s905-beelink-mini
          - s905-mxqpro-plus
          - s905d
          - s905d-ki-pro
          - s905d-sml5442tw
          - s905l
          - s905l-aurora-1s
          - s905l-b860av21u
          - s905l-mg101
          - s905l2
          - s905l2-e900v21e
          - s905l2-wojia
          - s905l3
          - s905l3-cm211
          - s905l3-unt400g1
          - s905l3-unt402a
          - s905l3a
          - s905l3a-cm311
          - s905l3a-m401a
          - s905l3b
          - s905l3b-e900v21d
          - s905l3b-e900v22d
          - s905l3b-e900v22e
          - s905l3b-ip103h
          - s905l3b-rg020et-ca
          - s905l3b-unt403a
          - s905lb-ipbs9505
          - s905lb-q96-mini
          - s905lb-r3300l
          - s905mb
          - s905w
          - s905w-w95
          - s905w-x96-mini
          - s905w-x96w
          - s905x
          - s905x-b860h
          - s905x-nexbox-a95x
          - s905x-t95
          - s905x-tbee
          - s905x-tx9
          - s905x2
          - s905x2-km3
          - s905x2-x96max-2g
          - s905x3
          - s905x3-2101
          - s905x3-a100
          - s905x3-a95xf3
          - s905x3-a95xf3-gb
          - s905x3-b
          - s905x3-h96max
          - s905x3-hk1
          - s905x3-ip1001m
          - s905x3-q1
          - s905x3-q2
          - s905x3-tx3
          - s905x3-tx3-bz
          - s905x3-ugoosx3
          - s905x3-whale
          - s905x3-x88-pro-x3
          - s905x3-x96air
          - s905x3-x96air-gb
          - s905x3-x96max
          - s912
          - s912-h96pro-plus
          - s912-m8s-pro
          - s912-nexbox-a1
          - s912-nexbox-a2
          - s912-onecloudpro
          - s912-phicomm-t1
          - s912-t95z-plus
          - s912-tx8-max
          - s912-tx9-pro-2g
          - s912-tx9-pro-3g
          - s912-x92
          - s912-zyxq-fake
          - s922x
          - s922x-ct2000
          - s922x-gtking
          - s922x-gtkingpro-h
          - s922x-odroid-n2
          - s922x-reva
          - s922x-ugoos-am6
          - seewo-sv21
          - smart-am40
          - smart-am60
          - station-m1
          - swan1-w28
          - sw799
          - tanix-tx6
          - tb-ls3399
          - tn3399
          - tpm312
          - tqc-a01
          - tvi3315a
          - vplus
          - wxy-oec
          - xiaobao
          - yskj
          - zcube1-max
          - zk-r39a
          - zysj
      amlogic_kernel:
        description: '输入内核,比如：6.1.120 或 6.1.120_6.12.15'
        required: true
        default: '6.1.120_6.12.15'
      kernel_usage:
        description: "选择内核仓库"
        required: true
        default: 'stable'
        type: choice
        options:
          - 'stable'
          - 'flippy'
          - 'dev'
          - 'beta'
      openwrt_size:
        description: '设置rootfs[单位：MiB](不想设置可留空)'
        required: false
        default: '512/2560'
      auto_kernel:
        description: '使用最新版内核(比如您设置6.1.120在6.1.x系列最新是6.1.130,则用6.1.130)'
        required: false
        default: 'true'
        type: boolean
      UPLOAD_FIRMWARE:
        description: '上传固件到 Github Artifacts'
        required: false
        default: 'false'
        type: boolean
      UPLOAD_RELEASE:
        description: '发布固件到 Github Releases'
        required: false
        default: 'true'
        type: boolean

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  PUSH_PLUS_TOKEN: ${{ secrets.PUSH_PLUS_TOKEN }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  PACKAGING_FIRMWARE: true
  LUCI_EDITION: amlogic

jobs:
  build:
    name: 打包armsr_rootfs_tar_gz
    runs-on: ubuntu-22.04
    steps:
    - name: 准备结束
      uses: actions/checkout@v4

    - name: 密匙检测
      uses: 281677160/common@yaoshi

    - name: 释放Ubuntu磁盘空间
      uses: endersonmenezes/free-disk-space@v2
      with:
        remove_android: true
        remove_dotnet: true
        remove_haskell: true
        remove_tool_cache: true
        remove_swap: true
        remove_packages: "azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox postgresql* temurin-* *llvm* mysql* dotnet-sdk-*"
        remove_packages_one_command: true
        remove_folders: "/usr/share/swift /usr/share/miniconda /usr/share/az* /usr/share/glade* /usr/local/lib/node_modules /usr/local/share/chromium /usr/local/share/powershell"
        testing: false

    - name: 整理变量
      run: |
        cd $GITHUB_WORKSPACE
        echo "SOURCE=${{ inputs.source_branch }}" >> ${GITHUB_ENV}
        echo "amlogic_model=${{ inputs.amlogic_model }}" >> ${GITHUB_ENV}
        echo "amlogic_kernel=${{ inputs.amlogic_kernel }}" >> ${GITHUB_ENV}
        echo "openwrt_size=${{ inputs.openwrt_size }}" >> ${GITHUB_ENV}
        echo "auto_kernel=${{ inputs.auto_kernel }}" >> ${GITHUB_ENV}
        echo "kernel_repo=ophub/kernel" >> ${GITHUB_ENV}
        echo "kernel_usage=${{ inputs.kernel_usage }}" >> ${GITHUB_ENV}
        echo "builder_name=ophub" >> ${GITHUB_ENV}
        echo "TARGET_PROFILE=aarch_64" >> ${GITHUB_ENV}
        echo "UPLOAD_FIRMWARE=${{ inputs.UPLOAD_FIRMWARE }}" >> $GITHUB_ENV
        echo "UPLOAD_RELEASE=${{ inputs.UPLOAD_RELEASE }}" >> $GITHUB_ENV
        echo "date=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "Tongzhi_Date=$(date +%Y年%m月%d日)" >> ${GITHUB_ENV}

    - name: 部署编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo bash -c 'bash <(curl -fsSL https://github.com/281677160/common/raw/main/custom/ubuntu.sh)'
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 拉取rootfs.tar.gz
      working-directory: /workdir
      run: |
        mkdir -p ${GITHUB_WORKSPACE}/openwrt/bin/targets
        ln -sf /workdir/openwrt ${GITHUB_WORKSPACE}/openwrt
        echo "HOME_PATH=${GITHUB_WORKSPACE}/openwrt" >> $GITHUB_ENV
        echo "FIRMWARE_PATH=${GITHUB_WORKSPACE}/openwrt/bin/targets" >> $GITHUB_ENV

    - name: 检查文件
      run: |
        cd ${HOME_PATH}
        curl -s -H "Authorization: Bearer ${{ env.REPO_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/releases/tags/targz > aarch
        if grep -q "Not Found" aarch; then
          echo -e "\033[31mReleases里名称为[targz]的tag存在\033[0m"
          exit 1
        elif grep -q "${{ env.SOURCE }}-armvirt-64-default-rootfs.tar.gz" aarch; then
          wget -q https://github.com/${{ github.repository }}/releases/download/targz/${{ env.SOURCE }}-armvirt-64-default-rootfs.tar.gz -O ${FIRMWARE_PATH}/openwrt-armvirt-64-default-rootfs.tar.gz
        else
          echo -e "\033[31mReleases里名称为[targz]的tag没有[${SOURCE}-armvirt-64-default-rootfs.tar.gz]存在\033[0m"
          exit 1
        fi
        find $FIRMWARE_PATH -type f -name "*.tar.gz" -size -2M -delete
        if [[ -z "$(find $FIRMWARE_PATH -maxdepth 1 -name '*rootfs.tar.gz' -print -quit)" ]]; then
          echo -e "\033[31m没发现[${SOURCE}-armvirt-64-default-rootfs.tar.gz]包存在\033[0m"
          exit 1
        fi

    - name: 自动打包armsr_rootfs_tar_gz
      id: compile
      uses: 281677160/common@aarch

    - name: 上传,发布
      if: steps.compile.outcome == 'success'
      uses: 281677160/common@uploads
